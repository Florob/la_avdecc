version: '3.3'

# Create a persistent volume across services
volumes:
  builds: {}

services:
  # Base builder image
  builder:
    image: builder:${TAG}
    build:
      context: .
      dockerfile: dockerHelper/builders/${TAG}/Dockerfile

  # CMake configure service
  gen_cmake:
    image: builder:${TAG}
    volumes:
      - ../:/home/builder/sources:ro
      - builds:/home/builder/builds
    entrypoint: /bin/bash ./gen_cmake.sh -o ../builds/${BUILD_FOLDER}

  # Build service
  build:
    image: builder:${TAG}
    volumes:
      - ../:/home/builder/sources:ro
      - builds:/home/builder/builds
    entrypoint: cmake --build ../builds/${BUILD_FOLDER}

  # Shell service
  shell:
    image: builder:${TAG}
    volumes:
      - ../:/home/builder/sources:ro
      - builds:/home/builder/builds
    entrypoint: /bin/bash

  # Run service
  run:
    image: builder:${TAG}
    volumes:
      - builds:/home/builder/builds
    entrypoint: ./${APP}
    working_dir: /home/builder/builds/${BUILD_FOLDER}/Install/bin

  # SonarQube image
  sonarqube:
    image: sonarqube:${TAG}
    build:
      context: .
      dockerfile: dockerHelper/SonarQube/${TAG}/Dockerfile

  # SonarQube service
  sonar:
    image: sonarqube:${TAG}
    volumes:
      - ../:/home/builder/sources:ro
      - builds:/home/builder/builds
    entrypoint: /home/builder/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner -Dproject.settings=/home/builder/sources/Docker/sonar.properties -Dsonar.cfamily.compile-commands=/home/builder/builds/${BUILD_FOLDER}/compile_commands.json
    working_dir: /home/builder/sources
